// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RuynServer.Data;

#nullable disable

namespace RuynServer.Migrations
{
    [DbContext(typeof(RuynServerContext))]
    [Migration("20241104114015_initial-migration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("RuynServer.Models.LevelData", b =>
                {
                    b.Property<int>("LevelDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TINYTEXT");

                    b.Property<string>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<int>("DownloadCount")
                        .HasColumnType("INT");

                    b.Property<byte[]>("FileData")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("FileDataHash")
                        .HasColumnType("TEXT");

                    b.Property<int>("LevelCount")
                        .HasColumnType("TINYINT");

                    b.Property<string>("LevelPackName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TINYTEXT");

                    b.Property<int>("Rank")
                        .HasColumnType("INT");

                    b.Property<DateTime>("UploadDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("LevelDataId");

                    b.HasIndex("FileDataHash")
                        .IsUnique();

                    b.HasIndex("LevelPackName")
                        .IsUnique();

                    b.ToTable("LevelData");
                });

            modelBuilder.Entity("RuynServer.Models.VoteJuntion", b =>
                {
                    b.Property<string>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<int>("LevelDataId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VoteID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VotesVoteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClientId", "LevelDataId");

                    b.HasIndex("LevelDataId");

                    b.HasIndex("VotesVoteId");

                    b.HasIndex("ClientId", "LevelDataId")
                        .IsUnique();

                    b.ToTable("VoteJuntion");
                });

            modelBuilder.Entity("RuynServer.Models.VoteType", b =>
                {
                    b.Property<int>("VoteId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("VoteId");

                    b.ToTable("Votes");

                    b.HasData(
                        new
                        {
                            VoteId = 0,
                            Name = "None"
                        },
                        new
                        {
                            VoteId = 1,
                            Name = "Upvote"
                        },
                        new
                        {
                            VoteId = 2,
                            Name = "Downvote"
                        });
                });

            modelBuilder.Entity("RuynServer.Models.VoteJuntion", b =>
                {
                    b.HasOne("RuynServer.Models.LevelData", "LevelData")
                        .WithMany("VoteJunctions")
                        .HasForeignKey("LevelDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RuynServer.Models.VoteType", "Votes")
                        .WithMany()
                        .HasForeignKey("VotesVoteId");

                    b.Navigation("LevelData");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("RuynServer.Models.LevelData", b =>
                {
                    b.Navigation("VoteJunctions");
                });
#pragma warning restore 612, 618
        }
    }
}
